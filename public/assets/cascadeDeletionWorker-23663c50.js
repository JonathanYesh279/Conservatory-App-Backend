var T=Object.defineProperty;var A=(y,f,g)=>f in y?T(y,f,{enumerable:!0,configurable:!0,writable:!0,value:g}):y[f]=g;var k=(y,f,g)=>(A(y,typeof f!="symbol"?f+"":f,g),g);(function(){"use strict";const y={student:{direct:["attendance","grades","bagrut_results","rehearsal_assignments"],indirect:["orchestra_members","theory_class_enrollments"]},teacher:{direct:["theory_lessons","private_lessons","orchestra_conductors"],indirect:["student_grades","rehearsal_schedules"]},orchestra:{direct:["rehearsals","performances","members"],indirect:["attendance_records","repertoire"]},rehearsal:{direct:["attendance","repertoire_items"],indirect:["student_progress","performance_assignments"]}};class f{constructor(){k(this,"cache",new Map);k(this,"maxCacheSize",1e3)}async calculateDependencies(e,a){const{entityType:s,entityId:t,maxDepth:n,includeIndirect:c,batchSize:d}=e,l=`${s}:${t}:${n}:${c}`;if(this.cache.has(l))return a?.(100),this.cache.get(l);try{const r=await this.performDependencyCalculation(s,t,n,c,d,a);if(this.cache.size>=this.maxCacheSize){const i=this.cache.keys().next().value;this.cache.delete(i)}return this.cache.set(l,r),r}catch(r){throw new Error(`Dependency calculation failed: ${r}`)}}async performDependencyCalculation(e,a,s,t,n,c){const d=new Set,l=[],r=[],i=y[e];i&&(i.direct.forEach((h,o)=>{r.push({type:h,id:`${h}-${a}`,depth:1,relationshipType:"direct"})}),t&&i.indirect.forEach(h=>{r.push({type:h,id:`${h}-${a}`,depth:1,relationshipType:"indirect"})}));let p=0;const _=r.length;for(;r.length>0&&p<1e4;){const h=r.splice(0,n);for(const o of h){if(d.has(o.id)||o.depth>s)continue;d.add(o.id),p++;const w=await this.createDependentEntity(o);if(l.push(w),o.depth<s&&(await this.getChildDependencies(o.type,o.id)).forEach(S=>{r.push({...S,depth:o.depth+1,parentId:o.id})}),p%10===0){const m=Math.min(100,p/Math.max(_,p)*100);c?.(m)}}await new Promise(o=>setTimeout(o,0))}return c?.(100),l}async createDependentEntity(e){const a=Math.floor(Math.random()*50)+1,s=this.determineCascadeAction(e.type,e.relationshipType);return{id:e.id,type:e.type,name:`${e.type.replace("_"," ")} ${e.id.split("-").pop()}`,relationshipType:e.relationshipType,cascadeAction:s,affectedCount:a,children:[],metadata:{tableName:`${e.type}s`,foreignKey:`${e.type}_id`,constraint:`fk_${e.type}_cascade`}}}async getChildDependencies(e,a){return this.getChildTypesForEntity(e).map((t,n)=>({type:t,id:`${t}-${a}-${n}`,relationshipType:Math.random()>.7?"indirect":"direct"}))}getChildTypesForEntity(e){return{attendance:["attendance_records","makeup_sessions"],grades:["grade_entries","rubric_scores"],bagrut_results:["exam_scores","project_submissions"],rehearsal_assignments:["part_assignments","practice_logs"],theory_lessons:["lesson_plans","homework_assignments"],orchestra_members:["seating_arrangements","part_distributions"]}[e]||[]}determineCascadeAction(e,a){const s=["grades","bagrut_results","attendance_records"],t=["rehearsal_assignments","practice_logs"];return s.includes(e)?a==="direct"?"restrict":"nullify":t.includes(e)?"nullify":a==="direct"?"delete":"nullify"}clearCache(){this.cache.clear()}}class g{analyzeImpact(e,a,s){const{warningThresholds:t}=a,n=[];let c=0,d=0,l=!0,r=!1;return e.forEach((i,p)=>{c+=i.affectedCount;const _=this.calculateDepth(i);d=Math.max(d,_);const h=this.generateWarningsForEntity(i,t);if(n.push(...h),i.cascadeAction==="restrict"&&(l=!1),(i.affectedCount>=t.mediumCount||i.cascadeAction==="delete")&&(r=!0),s&&p%50===0){const o=p/e.length*100;s(o)}}),s?.(100),{entityType:"unknown",entityId:"unknown",dependents:this.buildDependencyTree(e),totalAffectedCount:c,cascadeDepth:d,warnings:n,canDelete:l,requiresConfirmation:r}}calculateDepth(e,a=new Set){if(a.has(e.id))return 0;if(a.add(e.id),!e.children||e.children.length===0)return 1;const s=e.children.map(t=>this.calculateDepth(t,new Set(a)));return 1+Math.max(...s)}generateWarningsForEntity(e,a){const s=[];return e.affectedCount>=a.criticalCount?s.push({type:"data_loss",severity:"critical",message:`Deleting this ${e.type} will affect ${e.affectedCount} records`,affectedEntity:{type:e.type,id:e.id,name:e.name}}):e.affectedCount>=a.highCount&&s.push({type:"data_loss",severity:"high",message:`High impact: ${e.affectedCount} records will be affected`,affectedEntity:{type:e.type,id:e.id,name:e.name}}),e.cascadeAction==="restrict"&&s.push({type:"integrity_risk",severity:"critical",message:`Cannot delete: ${e.name} has protected dependencies`,affectedEntity:{type:e.type,id:e.id,name:e.name}}),e.relationshipType==="direct"&&e.cascadeAction==="delete"&&s.push({type:"active_dependencies",severity:"medium",message:`Direct dependency ${e.name} will be permanently deleted`,affectedEntity:{type:e.type,id:e.id,name:e.name}}),s}buildDependencyTree(e){const a=new Map,s=[];return e.forEach(t=>{a.set(t.id,{...t,children:[]})}),e.forEach(t=>{const n=a.get(t.id);s.push(n)}),s}}class b{async processBatch(e,a,s,t){const{chunkSize:n,concurrency:c}=s,d=[],l=this.chunkArray(e,n);let r=0;for(let i=0;i<l.length;i+=c){const p=l.slice(i,i+c),_=p.map(async w=>{const m=[];for(const S of w){try{const C=await a(S);m.push(C)}catch(C){console.error("Batch processing error:",C)}m.length%10===0&&await new Promise(C=>setTimeout(C,0))}return m}),h=await Promise.all(_);d.push(...h.flat()),r+=p.length;const o=r/l.length*100;t?.(o)}return d}chunkArray(e,a){const s=[];for(let t=0;t<e.length;t+=a)s.push(e.slice(t,t+a));return s}}const D=new f,M=new g,$=new b,u=new Map;self.onmessage=async E=>{const{id:e,type:a,payload:s}=E.data;try{switch(u.set(e,!0),a){case"CALCULATE_DEPENDENCIES":{const t=s,n=await D.calculateDependencies(t,c=>{u.get(e)&&self.postMessage({id:e,type:"PROGRESS",payload:{progress:c,stage:"calculating_dependencies"}})});u.get(e)&&self.postMessage({id:e,type:"SUCCESS",payload:{dependencies:n}});break}case"ANALYZE_IMPACT":{const t=s,n=M.analyzeImpact(t.dependencies,t,c=>{u.get(e)&&self.postMessage({id:e,type:"PROGRESS",payload:{progress:c,stage:"analyzing_impact"}})});u.get(e)&&self.postMessage({id:e,type:"SUCCESS",payload:{impact:n}});break}case"PROCESS_BATCH":{const t=s,n=d=>Promise.resolve(d),c=await $.processBatch(t.items,n,t,d=>{u.get(e)&&self.postMessage({id:e,type:"PROGRESS",payload:{progress:d,stage:"processing_batch"}})});u.get(e)&&self.postMessage({id:e,type:"SUCCESS",payload:{results:c}});break}case"CANCEL":{u.set(e,!1),self.postMessage({id:e,type:"SUCCESS",payload:{cancelled:!0}});break}default:throw new Error(`Unknown message type: ${a}`)}}catch(t){self.postMessage({id:e,type:"ERROR",payload:{error:t instanceof Error?t.message:"Unknown error",stack:t instanceof Error?t.stack:void 0}})}finally{u.delete(e)}},self.addEventListener("beforeunload",()=>{D.clearCache(),u.clear()})})();
