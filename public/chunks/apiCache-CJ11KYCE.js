import{r as _}from"./vendor-B2j9q2e_.js";import{a as i}from"./cascade-deletion-CG57WmIj.js";import{t as d}from"./theoryEnrollmentService-BrndHKnz.js";import{a as D,u as g,b as A}from"./query-BI61muSV.js";import"./utils-x1PSU_OZ.js";const y={STATIC_DATA_STALE_TIME:10*60*1e3,STATIC_DATA_CACHE_TIME:30*60*1e3,DYNAMIC_DATA_STALE_TIME:2*60*1e3,DYNAMIC_DATA_CACHE_TIME:5*60*1e3,REALTIME_DATA_STALE_TIME:30*1e3,REALTIME_DATA_CACHE_TIME:60*1e3},s={STUDENTS:["students"],STUDENT:e=>["student",e],STUDENT_THEORY_LESSONS:e=>["student",e,"theory-lessons"],STUDENT_ORCHESTRAS:e=>["student",e,"orchestras"],STUDENT_SCHEDULE:e=>["student",e,"schedule"],STUDENT_ATTENDANCE:e=>["student",e,"attendance"],STUDENT_DOCUMENTS:e=>["student",e,"documents"],TEACHERS:["teachers"],TEACHER:e=>["teacher",e],TEACHER_SCHEDULE:e=>["teacher",e,"schedule"],THEORY_LESSONS:["theory-lessons"],THEORY_LESSON:e=>["theory-lesson",e],ORCHESTRAS:["orchestras"],ORCHESTRA:e=>["orchestra",e],SCHOOL_YEARS:["school-years"],HOLIDAYS:["holidays"],INSTRUMENTS:["instruments"]},E=new Map;function T(e,t){if(E.has(e))return E.get(e);const l=t().finally(()=>{E.delete(e)});return E.set(e,l),l}const c={students:{getAll:()=>T("students-all",()=>i.students.getAllStudents()),getById:e=>T(`student-${e}`,()=>i.students.getStudentById(e)),update:(e,t)=>i.students.updateStudent(e,t)},teachers:{getAll:()=>T("teachers-all",()=>i.teachers.getAllTeachers()),getById:e=>T(`teacher-${e}`,()=>i.teachers.getTeacherById(e))},theoryLessons:{getAll:()=>T("theory-lessons-all",()=>i.theoryLessons.getTheoryLessons()),getById:e=>T(`theory-lesson-${e}`,()=>i.theoryLessons.getTheoryLessonById(e)),addStudent:(e,t)=>d.enrollStudent(e,t,{method:"manual",performedBy:"teacher",reason:"Manual enrollment"}),removeStudent:(e,t)=>d.unenrollStudent(e,t,{reason:"Manual unenrollment"})},orchestras:{getAll:()=>T("orchestras-all",()=>i.orchestras.getAllOrchestras()),getById:e=>T(`orchestra-${e}`,()=>i.orchestras.getOrchestraById(e))},schoolData:{getSchoolYears:()=>T("school-years",()=>i.schoolData?.getSchoolYears?.()||Promise.resolve([])),getHolidays:()=>T("holidays",()=>i.schoolData?.getHolidays?.()||Promise.resolve([])),getInstruments:()=>T("instruments",()=>i.schoolData?.getInstruments?.()||Promise.resolve([]))}};function L(e){return D({queryKey:s.STUDENT(e||""),queryFn:()=>c.students.getById(e),enabled:!!e,staleTime:y.DYNAMIC_DATA_STALE_TIME,gcTime:y.DYNAMIC_DATA_CACHE_TIME,refetchOnWindowFocus:!1})}function m(){return D({queryKey:s.THEORY_LESSONS,queryFn:c.theoryLessons.getAll,staleTime:y.DYNAMIC_DATA_STALE_TIME,gcTime:y.DYNAMIC_DATA_CACHE_TIME,refetchOnWindowFocus:!1})}function H(e){const{data:t=[]}=m(),{data:l}=L(e);return _.useMemo(()=>!e||!t.length?[]:t.filter(S=>S.studentIds?.includes(e)||l?.theoryLessonIds?.includes(S._id)),[t,e,l?.theoryLessonIds])}function v(e,t,l){const{data:S=[]}=m(),{data:o}=L(e);return _.useMemo(()=>!e||!S.length?[]:S.filter(r=>{if(r.studentIds?.includes(e)||o?.theoryLessonIds?.includes(r._id)||r.maxStudents&&r.studentIds?.length>=r.maxStudents)return!1;const u=!r.targetGrades||r.targetGrades.length===0||r.targetGrades.includes(t),h=!r.level||r.level===l||r.level==="all";return u&&h}).map(r=>({...r,isCompatible:!0,gradeCompatible:!0,levelCompatible:!0,isFull:!1,isEnrolled:!1})),[S,e,o?.theoryLessonIds,t,l])}function M(e){const t=g(),l=A({mutationFn:({lessonId:o})=>c.theoryLessons.addStudent(o,e),onMutate:async({lessonId:o})=>{await t.cancelQueries({queryKey:s.THEORY_LESSONS}),await t.cancelQueries({queryKey:s.STUDENT(e)});const r=t.getQueryData(s.THEORY_LESSONS),a=t.getQueryData(s.STUDENT(e));return t.setQueryData(s.THEORY_LESSONS,n=>n?.map(u=>u._id===o?{...u,studentIds:[...u.studentIds||[],e]}:u)||[]),t.setQueryData(s.STUDENT(e),n=>n&&{...n,theoryLessonIds:[...n.theoryLessonIds||[],o]}),{previousTheoryLessons:r,previousStudent:a}},onError:(o,r,a)=>{a?.previousTheoryLessons&&t.setQueryData(s.THEORY_LESSONS,a.previousTheoryLessons),a?.previousStudent&&t.setQueryData(s.STUDENT(e),a.previousStudent)},onSettled:()=>{t.invalidateQueries({queryKey:s.THEORY_LESSONS}),t.invalidateQueries({queryKey:s.STUDENT(e)})}}),S=A({mutationFn:({lessonId:o})=>c.theoryLessons.removeStudent(o,e),onMutate:async({lessonId:o})=>{await t.cancelQueries({queryKey:s.THEORY_LESSONS}),await t.cancelQueries({queryKey:s.STUDENT(e)});const r=t.getQueryData(s.THEORY_LESSONS),a=t.getQueryData(s.STUDENT(e));return t.setQueryData(s.THEORY_LESSONS,n=>n?.map(u=>u._id===o?{...u,studentIds:u.studentIds?.filter(h=>h!==e)||[]}:u)||[]),t.setQueryData(s.STUDENT(e),n=>n&&{...n,theoryLessonIds:n.theoryLessonIds?.filter(u=>u!==o)||[]}),{previousTheoryLessons:r,previousStudent:a}},onError:(o,r,a)=>{a?.previousTheoryLessons&&t.setQueryData(s.THEORY_LESSONS,a.previousTheoryLessons),a?.previousStudent&&t.setQueryData(s.STUDENT(e),a.previousStudent)},onSettled:()=>{t.invalidateQueries({queryKey:s.THEORY_LESSONS}),t.invalidateQueries({queryKey:s.STUDENT(e)})}});return{enroll:l.mutate,unenroll:S.mutate,isEnrolling:l.isPending,isUnenrolling:S.isPending,error:l.error||S.error}}export{s as QUERY_KEYS,c as cachedApiService,v as useAvailableTheoryLessons,L as useStudent,H as useStudentTheoryLessons,M as useTheoryLessonEnrollment,m as useTheoryLessons};
