var d=Object.defineProperty;var l=(i,e,t)=>e in i?d(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var c=(i,e,t)=>l(i,typeof e!="symbol"?e+"":e,t);import{f as u,s as T,g as m}from"./utils-x1PSU_OZ.js";const h={BASE_URL:"/api",TIMEOUT:3e4};class f{constructor(){c(this,"baseURL");c(this,"token");this.baseURL=h.BASE_URL,this.token=this.getStoredToken()}getStoredToken(){return localStorage.getItem("authToken")||sessionStorage.getItem("authToken")}getHeaders(){const e={"Content-Type":"application/json"};return this.token&&(e.Authorization=`Bearer ${this.token}`),e}async handleResponse(e){const t=e.headers.get("content-type");let r;if(t?.includes("application/json")?r=await e.json():r=await e.text(),!e.ok){const s={code:this.getErrorCode(e.status),message:this.getErrorMessage(e.status,r),details:r,status:e.status};throw r?.code==="DUPLICATE_TEACHER_DETECTED"&&(s.code="DUPLICATE_TEACHER_DETECTED",s.duplicateInfo=r.duplicateInfo),s}return r}getErrorCode(e){switch(e){case 401:return"UNAUTHORIZED";case 403:return"FORBIDDEN";case 404:return"NOT_FOUND";case 422:return"VALIDATION_ERROR";case 500:case 502:case 503:return"SERVER_ERROR";default:return"NETWORK_ERROR"}}getErrorMessage(e,t){const r={401:"נדרשת התחברות מחדש למערכת",403:"אין הרשאה לצפייה בתוכן זה",404:"המורה המבוקש לא נמצא",422:"נתונים לא תקינים",500:"שגיאת שרת פנימית",502:"השרת אינו זמין כרגע",503:"השירות אינו זמין כרגע"};return t?.message||r[e]||"שגיאה לא צפויה"}async request(e,t={}){const r=`${this.baseURL}${e}`,s={...t,headers:{...this.getHeaders(),...t.headers},signal:AbortSignal.timeout(h.TIMEOUT)};try{const a=await fetch(r,s);return await this.handleResponse(a)}catch(a){if(a instanceof Error){if(a.name==="AbortError")throw{code:"NETWORK_ERROR",message:"הבקשה נכשלה - פג זמן ההמתנה",details:{timeout:!0}};if(a.message.includes("Failed to fetch"))throw{code:"NETWORK_ERROR",message:"לא ניתן להתחבר לשרת. בדוק את החיבור לאינטרנט",details:{networkError:!0}}}throw a}}async getTeacherDetails(e){return this.request(`/teacher/${e}`)}async getAllTeachers(e){const t=new URLSearchParams;e&&Object.keys(e).forEach(s=>{e[s]!==void 0&&e[s]!==null&&t.append(s,e[s].toString())});const r=t.toString();return this.request(`/teacher${r?"?"+r:""}`)}async getTeacherIds(){return this.request("/teacher/ids")}async getTeachersByRole(e){return this.request(`/teacher/role/${e}`)}async getTeacherStudents(e){const r=(await this.getTeacherDetails(e)).teaching?.studentIds||[];if(r.length===0)return[];const s=r.map(async n=>{try{return await this.request(`/student/${n}`)}catch(o){return console.warn(`Failed to fetch student ${n}:`,o),null}});return(await Promise.allSettled(s)).filter(n=>n.status==="fulfilled"&&n.value!==null).map(n=>n.value)}async updateTeacherSchedule(e,t){return this.request(`/teacher/${e}/schedule`,{method:"POST",body:JSON.stringify(t)})}async addStudentToTeacher(e,t){return this.request(`/teacher/${e}/student/${t}`,{method:"POST"})}async removeStudentFromTeacher(e,t){return this.request(`/teacher/${e}/student/${t}`,{method:"DELETE"})}async updateTeacherPersonalInfo(e,t){return this.request(`/teacher/${e}`,{method:"PUT",body:JSON.stringify({personalInfo:t})})}async updateTeacherProfessionalInfo(e,t){return this.request(`/teacher/${e}`,{method:"PUT",body:JSON.stringify({professionalInfo:t})})}async updateTeacherTimeBlocks(e,t){return this.request(`/teacher/${e}`,{method:"PUT",body:JSON.stringify({timeBlocks:t})})}async createTeacher(e,t){return this.request("/teacher",{method:"POST",body:JSON.stringify({...e,adminId:t})})}async deactivateTeacher(e){return this.request(`/teacher/${e}`,{method:"DELETE"})}async getTeacherStatistics(e,t){const r=new URLSearchParams;t&&(r.append("from",u(t.from,"yyyy-MM-dd")),r.append("to",u(t.to,"yyyy-MM-dd")));const s=r.toString();return this.request(`/analytics/teacher/${e}${s?"?"+s:""}`)}async checkScheduleAvailability(e,t,r,s){return this.request(`/teacher/${e}/availability`,{method:"POST",body:JSON.stringify({day:t,startTime:r,duration:s})})}async addTimeBlock(e,t){return this.request(`/teacher/${e}/timeblock`,{method:"POST",body:JSON.stringify(t)})}async updateTimeBlock(e,t,r){return this.request(`/teacher/${e}/timeblock/${t}`,{method:"PUT",body:JSON.stringify(r)})}async removeTimeBlock(e,t){return this.request(`/teacher/${e}/timeblock/${t}`,{method:"DELETE"})}}const E=new f;class S{static transformHebrewDates(e){if(!e)return e;if(typeof e=="string"&&/^\d{4}-\d{2}-\d{2}/.test(e))return new Date(e);if(Array.isArray(e))return e.map(t=>this.transformHebrewDates(t));if(typeof e=="object"){const t={...e};for(const r in t)r.includes("Date")||r.includes("date")||r==="createdAt"||r==="updatedAt"?t[r]=this.transformHebrewDates(t[r]):typeof t[r]=="object"&&(t[r]=this.transformHebrewDates(t[r]));return t}return e}static formatPhoneNumber(e){if(!e)return"";const t=e.replace(/\D/g,"");return t.length===10&&t.startsWith("05")?`${t.slice(0,3)}-${t.slice(3,6)}-${t.slice(6)}`:t.length===9&&t.startsWith("5")?`05${t.slice(1,2)}-${t.slice(2,5)}-${t.slice(5)}`:e}static calculateTeachingHours(e){return!e||e.length===0?0:e.reduce((t,r)=>t+(r.duration||0),0)/60}static getActiveStudentCount(e){return e?e.length:0}static formatTimeBlock(e){return e?`${e.day} ${e.startTime}-${e.endTime} (${e.location||"ללא מיקום"})`:""}static checkTimeBlockConflict(e,t){return!e||e.length===0?!1:e.some(r=>{if(r.day!==t.day)return!1;const s=this.timeToMinutes(r.startTime),a=this.timeToMinutes(r.endTime),n=this.timeToMinutes(t.startTime),o=this.timeToMinutes(t.endTime);return n<a&&s<o})}static timeToMinutes(e){if(!e)return 0;const[t,r]=e.split(":").map(Number);return t*60+r}static minutesToTime(e){const t=Math.floor(e/60),r=e%60;return`${t.toString().padStart(2,"0")}:${r.toString().padStart(2,"0")}`}static getWeekRange(e=new Date){return{start:T(e,{weekStartsOn:0}),end:m(e,{weekStartsOn:0})}}static safeParseJson(e,t){try{return JSON.parse(e)}catch{return t}}static handleNullUndefined(e,t){return e??t}static validateEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}static validatePhoneNumber(e){const t=e.replace(/\D/g,"");return t.length===10&&t.startsWith("05")}static generateTimeSlots(e,t,r){const s=[],a=this.timeToMinutes(e),n=this.timeToMinutes(t);for(let o=a;o<n;o+=r)s.push(this.minutesToTime(o));return s}static isWorkingDay(e){return["ראשון","שני","שלישי","רביעי","חמישי"].includes(e)}static sortTimeBlocks(e){const t=["ראשון","שני","שלישי","רביעי","חמישי","שישי","שבת"];return e.sort((r,s)=>{const a=t.indexOf(r.day)-t.indexOf(s.day);return a!==0?a:this.timeToMinutes(r.startTime)-this.timeToMinutes(s.startTime)})}}export{S as T,E as t};
